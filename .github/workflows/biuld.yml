#
# 2025 Alon<https://github.com/xiealon>
# edition and modified base of the Ing<wjz304>
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
# "At the runs orders adjunction(tag on) symbol | 
#  the code is run to sequence of the line"
#

name: Build OpenWrt

on:
  schedule:
    - cron: "0 0 2/6 * *"
  workflow_dispatch:

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.set-matrix.outputs.release }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Generate build matrix
        id: set-matrix
        run: |
          sudo timedatectl set-timezone "Asia/Shanghai"
          echo "release=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT

          # -m 所有项目以逗号分隔，并填满整行行宽
          # -B 不列出任何以 ~ 字符结束的项目
          # -Q 将条目名称括上双引号

          echo "matrix={ \"config\": [ $(echo $(ls -mBQ *.config)) ] }" >> $GITHUB_OUTPUT

  build:
    name: Build OpenWrt
    runs-on: ubuntu-latest
    needs: matrix
    env:
      release: ${{ needs.matrix.outputs.release }}
    strategy:
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: |
            "${GITHUB_WORKSPACE}"/openwrt/dl
            "${GITHUB_WORKSPACE}"/openwrt/build_dir
            "${GITHUB_WORKSPACE}"/openwrt/staging_dir
            "${GITHUB_WORKSPACE}"/openwrt/ccache
          key: ${{ runner.os }}-openwrt-${{ hashFiles('feeds.conf', '.config') }}
      # don't modify to run
      # - name: Free Disk Space (Ubuntu)
      #   uses: jlumbroso/free-disk-space@main
      #   with:
      #        tool-cache: true
          
      - name: Init Env
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          sudo timedatectl set-timezone "Asia/Shanghai"

          sudo apt update
          sudo apt full-upgrade -y
          sudo apt install -y \
          ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang cmake coreutils cpio curl device-tree-compiler e2fsprogs \
          flex gawk gcc-multilib g++-multilib gcc git gperf haveged help2man intltool \
          jq lib32z1 libc6-dev-i386 libc6-i386 libelf-dev libfuse-dev libglib2.0-dev \
          libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev \
          libpcre2-dev libpython3-dev libreadline-dev libssl-dev libtool llvm lm-sensors \
          lrzsz msmtp ninja-build ntpdate p7zip p7zip-full patch pkgconf python3 \
          python3-pip python3-pyelftools python3-setuptools rsync scons sed \
          smartmontools squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
          vim wget wsdd2 xmlto xxd zlib1g-dev \
          bc python-is-python3 libcap-dev libpam0g-dev libgmp-dev libmpfr-dev
          
          sudo apt install --reinstall libc6
          sudo systemctl daemon-reload
          # sudo apt -y autoremove --purge
          sudo apt -y clean

          git clone --depth=1 https://github.com/xiealon/po2lmo
          (cd po2lmo && sudo make && sudo make install)

          df -h
      
      - name: make
        run: |
          mkdir -p "${GITHUB_WORKSPACE}/openwrt"

          cd "${GITHUB_WORKSPACE}/openwrt"
          
          "${GITHUB_WORKSPACE}"/build.sh "${GITHUB_WORKSPACE}/${{ matrix.config }}"

      - name: create
        run: |
          cd /${GITHUB_WORKSPACE}/openwrt
          
          ls -al
            if [ $(ls *.img.gz | wc -l) -le 0 ]; then
              echo "No firmware found"
              exit 1
            fi
            
          zip -q -r $(basename "${{ matrix.config }}" .config | awk -F';' '{printf $1"-"$3}')-${{ env.release }}.zip *.img.gz
            if [ $? -ne 0 ]; then
              echo "Failed to condense the files"
              exit 1
            else
              echo "Successfully updated the files Condense"
            fi

      - name: Wait for file operations to complete
        run: 
          sleep 10 # 等待 10 秒
        
      - name: Check file permissions
        run: |  
          ls -l /${GITHUB_WORKSPACE}/openwrt/*.zip
        
      - name: Wait for file operations to complete
        run: |
          sleep 10 # 等待 10 秒
        
      - name: Upload firmware to release
        uses: softprops/action-gh-release@v2
        if: success() && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release }}
          files: /"${GITHUB_WORKSPACE}"/openwrt/*.zip

      - name: Update Cache
        if: always()  # 即使构建失败也保存缓存
        uses: actions/cache/save@v3
        with:
          path: |
            /"${GITHUB_WORKSPACE}"/openwrt/dl
            /"${GITHUB_WORKSPACE}"/openwrt/build_dir
            /"${GITHUB_WORKSPACE}"/openwrt/staging_dir
            /"${GITHUB_WORKSPACE}"/openwrt/ccache
          key: ${{ runner.os }}-openwrt-${{ hashFiles('feeds.conf', '.config') }}
      
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
         retain_days: 0
         keep_minimum_runs: 6

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        with:
          keep_latest: 12
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
